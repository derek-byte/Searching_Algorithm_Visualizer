/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:430713:
  appc.background(230);
} //_CODE_:window1:430713:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:398259:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  n = source.getValueI();
  list = new BoxList(n);
} //_CODE_:slider1:398259:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:dropList1:641869:
  println("dropList1 - GDropList >> GEvent." + event + " @ " + millis());
  sortingAlgo = source.getSelectedText();
  if (sortingAlgo.equals("Binary Search")) {
    list.arr = mergeSort(list.arr, 0, n-1);
  }
} //_CODE_:dropList1:641869:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:438206:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if (!isAnimating)
    source.setText("Pause");
  else 
    source.setText("Play");
    
  isAnimating = !isAnimating;
} //_CODE_:button1:438206:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:523852:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  list.arr = list.generateRandomArray(list.n);
  list.searchValue = list.getRandomValue(list.arr);
} //_CODE_:button2:523852:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  window1 = GWindow.getWindow(this, "Window title", 0, 0, 200, 250, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.KEEP_OPEN);
  window1.addDrawHandler(this, "win_draw1");
  slider1 = new GSlider(window1, 38, 95, 125, 40, 10.0);
  slider1.setLimits(15.0, 5.0, 25.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  dropList1 = new GDropList(window1, 38, 10, 125, 80, 3, 10);
  dropList1.setItems(loadStrings("list_641869"), 0);
  dropList1.addEventHandler(this, "dropList1_click1");
  button1 = new GButton(window1, 35, 204, 125, 30);
  button1.setText("Play");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window1, 36, 161, 125, 30);
  button2.setText("Shuffle");
  button2.addEventHandler(this, "button2_click1");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GSlider slider1; 
GDropList dropList1; 
GButton button1; 
GButton button2; 
